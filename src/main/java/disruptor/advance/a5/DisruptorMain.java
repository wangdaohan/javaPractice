package disruptor.advance.a5;

/**
 * Disruptor底层源码分析
 *  1.Disruptor为何底层性能如此强大
 *      1.1 高性能之道 - 数据结构 - 内存预加载机制
 *      1.2 高性能之道 - 内核 - 使用单线程写
 *      1.3 高性能之道 - 系统内存优化 - 内存屏障
 *      1.4 高性能之道 - 系统缓存优化 - 消除伪共享
 *      1.5 高性能之道 - 算法优化 - 序号栅栏机制
 *      1.6 获取下一个可用序列号
 *
 *
 *
 */
public class DisruptorMain {
}
